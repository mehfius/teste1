#!/bin/bash
# Script para extrair texto dos arquivos HTML do Airbnb

# Definir diret√≥rios padr√£o
INPUT_DIR="./output"
OUTPUT_DIR="./extracted"
FORMAT="both"  # Op√ß√µes: json, text, both
UPDATE_SUPABASE=false  # Por padr√£o, n√£o atualiza o Supabase

# Processar argumentos da linha de comando
while [[ $# -gt 0 ]]; do
  case $1 in
    --input-dir=*)
      INPUT_DIR="${1#*=}"
      shift
      ;;
    --output-dir=*)
      OUTPUT_DIR="${1#*=}"
      shift
      ;;
    --format=*)
      FORMAT="${1#*=}"
      shift
      ;;
    --update-supabase)
      UPDATE_SUPABASE=true
      shift
      ;;
    --help)
      echo "Uso: $0 [--input-dir=DIR] [--output-dir=DIR] [--format=FORMAT] [--update-supabase]"
      echo ""
      echo "Op√ß√µes:"
      echo "  --input-dir=DIR    Diret√≥rio com arquivos HTML (padr√£o: ./output)"
      echo "  --output-dir=DIR   Diret√≥rio para salvar os resultados (padr√£o: ./extracted)"
      echo "  --format=FORMAT    Formato de sa√≠da: json, text ou both (padr√£o: both)"
      echo "  --update-supabase  Atualiza t√≠tulos extra√≠dos no Supabase"
      echo "  --help             Mostra esta ajuda"
      exit 0
      ;;
    *)
      echo "Par√¢metro desconhecido: $1"
      echo "Use --help para ver as op√ß√µes dispon√≠veis."
      exit 1
      ;;
  esac
done

# Verificar se o diret√≥rio de entrada existe
if [ ! -d "$INPUT_DIR" ]; then
  echo "Erro: Diret√≥rio de entrada '$INPUT_DIR' n√£o existe."
  exit 1
fi

# Verificar se h√° arquivos HTML no diret√≥rio de entrada
HTML_COUNT=$(find "$INPUT_DIR" -name "*.html" | wc -l)
if [ $HTML_COUNT -eq 0 ]; then
  echo "Aviso: Nenhum arquivo HTML encontrado em '$INPUT_DIR'."
  exit 1
fi

echo "Iniciando extra√ß√£o de texto de $HTML_COUNT arquivos HTML..."
echo "  Diret√≥rio de entrada: $INPUT_DIR"
echo "  Diret√≥rio de sa√≠da: $OUTPUT_DIR"
echo "  Formato: $FORMAT"
echo ""

# Executar o extrator de texto Python
python text_extractor.py --input-dir="$INPUT_DIR" --output-dir="$OUTPUT_DIR" --format="$FORMAT"

# Verificar o resultado
EXIT_CODE=$?
if [ $EXIT_CODE -eq 0 ]; then
  echo ""
  echo "Extra√ß√£o de texto conclu√≠da com sucesso!"
  echo "Os arquivos extra√≠dos est√£o dispon√≠veis em: $OUTPUT_DIR"
  
  # Atualizar Supabase se solicitado
  if [ "$UPDATE_SUPABASE" = true ]; then
    echo ""
    echo "Verificando vari√°veis de ambiente para Supabase..."
    if [ -z "$SUPABASE_URL" ] || [ -z "$SUPABASE_KEY" ]; then
      echo "‚ö†Ô∏è  Aviso: As vari√°veis de ambiente SUPABASE_URL e/ou SUPABASE_KEY n√£o est√£o definidas."
      echo "    A atualiza√ß√£o do Supabase pode falhar."
    else
      echo "‚úÖ Vari√°veis de ambiente para Supabase encontradas."
    fi
    
    echo ""
    echo "Iniciando atualiza√ß√£o dos t√≠tulos no Supabase..."
    UPDATE_COUNT=0
    
    # Processar cada arquivo JSON extra√≠do
    for JSON_FILE in "$OUTPUT_DIR"/*.json; do
      if [ -f "$JSON_FILE" ]; then
        FILENAME=$(basename "$JSON_FILE")
        ROOM_ID=$(echo "$FILENAME" | grep -oP 'airbnb_\K\d+(?=_)' || echo "")
        
        if [ -n "$ROOM_ID" ]; then
          # Extrair o t√≠tulo do arquivo JSON usando jq se dispon√≠vel, ou grep como fallback
          if command -v jq &> /dev/null; then
            TITLE=$(jq -r '.listing.title // empty' "$JSON_FILE")
          else
            TITLE=$(grep -o '"title": "[^"]*"' "$JSON_FILE" | head -1 | cut -d'"' -f4)
          fi
          
          if [ -n "$TITLE" ]; then
            echo "üîÑ Atualizando quarto $ROOM_ID com t√≠tulo: '$TITLE'"
            python supabase_updater.py "$ROOM_ID" "$TITLE"
            if [ $? -eq 0 ]; then
              UPDATE_COUNT=$((UPDATE_COUNT + 1))
            fi
          else
            echo "‚ö†Ô∏è  T√≠tulo n√£o encontrado para o quarto $ROOM_ID"
          fi
        fi
      fi
    done
    
    echo ""
    echo "‚úÖ Atualiza√ß√£o do Supabase conclu√≠da! $UPDATE_COUNT t√≠tulos atualizados."
  fi
else
  echo ""
  echo "Erro durante a extra√ß√£o de texto. C√≥digo de sa√≠da: $EXIT_CODE"
fi

exit $EXIT_CODE